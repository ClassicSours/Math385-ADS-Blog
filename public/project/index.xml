<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homework on Aaron&#39;s Statistics Blog</title>
    <link>/project/</link>
    <description>Recent content in Homework on Aaron&#39;s Statistics Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sat, 17 Feb 2018 00:00:00 -0800</lastBuildDate>
    
	<atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gapminder</title>
      <link>/project/gapminder/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/gapminder/</guid>
      <description>Prompt   Using the gapminder data set, explore the question “How does life expectancy change over time for each country?”   Part 1. Read the Data  suppressMessages(library(magrittr)) suppressMessages(library(ggplot2)) suppressMessages(library(plotly)) suppressMessages(library(webshot)) gapminder &amp;lt;- read.csv(&amp;quot;../../data/gapminder-FiveYearData.csv&amp;quot;)  Part 2. Visualizing the Data  gapminder.gg &amp;lt;- ggplot(gapminder) + geom_line(aes(x = year, y = lifeExp, color = country), alpha = .85, stat = &amp;quot;smooth&amp;quot;, method = &amp;quot;loess&amp;quot;) + facet_grid(~continent, scales = &amp;quot;free&amp;quot;) + theme(legend.</description>
    </item>
    
    <item>
      <title>homework2</title>
      <link>/project/homework2/</link>
      <pubDate>Sat, 17 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/homework2/</guid>
      <description>23.2.1 (#1, #2)   One downside of the linear model is that it is sensitive to unusual values because the distance incorporates a squared term. Fit a linear model to the simulated data below, and visualise the results. Rerun a few times to generate different simulated datasets. What do you notice about the model?   set.seed(0) suppressMessages(library(dplyr)) sim1a &amp;lt;- tibble( x = rep(1:10, each = 3), y = x * 1.</description>
    </item>
    
  </channel>
</rss>